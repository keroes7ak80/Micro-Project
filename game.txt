                                                                     
 drawline macro ocount,incount,col,row,color   ;this macro draw lines(vetical or horizontal)
    local myloop1,myloop2
      
    mov bh,ocount
    mov bl,incount
    mov dx,row
    mov cx,col
    
      myloop1:
       myloop2:
         mov ah,0ch 
         mov al,color  ;color
         int 10h
         inc dx
         dec bl
         cmp bl,0
         jnz myloop2
     inc cx
     mov dx,row
     mov bl,incount
     dec bh
     jnz myloop1       
 endm 
 

 
 drawcir macro cenx,ceny,raduis,colour  ;this macro draw circle
     local myloop10,myloop9,draw,over
     
       
     mov dx,raduis
     mov rad1,dx
     SHL rad1,1  ;double rad
     mov ax,rad1
     mov temp4,ax
     mov rad2,dx
     SHL rad2,1  ;double rad
     mov temp3,dx
         
    
     
     mov ax,temp3
     mul ax
     
     mov temp3,ax
             
     mov dx,cenx 
     sub dx,raduis
     
     mov cx,ceny
     sub cx,raduis
      
     mov temp2,cx
                 
     myloop10:
       myloop9:    
         ;check
         mov temp1,dx
         
         mov ax,dx
         sub ax,cenx
         mul ax
         mov bx,ax
         
         mov ax,cx
         sub ax,ceny
         mul ax
               
         mov dx,temp1
               
         add ax,bx  
             
         cmp ax,temp3    
         ;cmp ax,sqr
         jz draw      
         jnc over        
         
    draw:mov ah,0ch 
         mov al,colour
         int 10h
    over:inc cx
         dec rad1
         cmp rad1,0
         jnz myloop9
     inc dx
     mov cx,temp2
     mov ax,temp4
     mov rad1,ax
     dec rad2
     jnz myloop10
        
   
    endm
	 clearscreen macro
    mov ah,06
    mov al,00
    mov bh,07
    mov ch,00
    mov cl,00
    mov dh,24
    mov dl,79
    int 10h   
    endm
 setcursor macro row,col
    mov ah,02
    mov al,00
    mov bh,00
    mov dh,row
    mov dl,col
    int 10h  
    endm
 
 mainscreen macro
 setcursor 7,25   
 mov ah,09
 mov dx,offset msg1
 int 21h      
 
 setcursor 8,25
 mov ah,09
 mov dx,offset msg2
 int 21h      
 
 setcursor 9,25    
 mov ah,09
 mov dx,offset msg3
 int 21h   
 endm
 
 firstwindow macro    
    stay:
        clearscreen
        setcursor 7,25 
             
        mov ah,09
        mov dx,offset msgf
        int 21h       
        
        setcursor 8,32

        mov ah,0ah
        mov dx,offset buffer1
        int 21h

       mov bx,offset buffer1
       mov al,[bx+2]
      ;1st char in [bx+2]
       mov si,offset arr1
       mov cx,52
 
myloop:cmp al,[si]
       jz next 
       inc si
       dec cx
       jnz myloop
       jmp stay  
next:clearscreen
     mainscreen
 
    endm
 
   .model small
   .stack 64
   .data
 msgf db 'please enter your name','$'
buffer1 db 31,?,31dup(0ffh)
msgff db 'please enter key to continue','$' 
arr1 db  'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z' 

 
 
    
 centx dw 100
 centy dw 200
 rad   dw 15 
 row1  dw 50 
 col1  dw 50 
 row2  dw 50  
 col2  dw 260
 value  dw ?
 counter EQU 10     
 ;these are variables for drawcir macro 
 temp1 dw ?    ;hold dx
 temp2 dw ?    ;hold cx
 temp3 dw ?    ;hold rad
 rad1  dw ?    ;inner loop
 temp4 dw ?    ;hold inner
 rad2  dw ?    ;outer loop
 ;
 
 msg1 db 'to start chatting press f1','$'
 msg2 db 'to start game press f2','$'
 msg3 db 'to start end the program press ESC','$'
 
   .code
   
   alldraw proc far
    drawline 7,70,50,50,0Ah      ;ocount,incount,col,row,color  ->this draw left stick
   drawline 7,70,260,50,0Ah     ;                              ->this draw right stick
   drawline 7,200,0,0,80         ;                              ->this draw left frame
   drawline 7,200,313,0,80       ;                              ->this draw right frame                  
   drawcir 100,200,10,15  ;cenx,ceny,raduis,colour                          
   ret                                     
 alldraw endp

 ;--->Dina
 MoveUP1 proc  
     drawline 7,70,col1,row1,00h      ;ocount,incount,col,row,color  ->this draw left stick
     drawline 7,70,col2,row2,00h
     mov bx , offset row1
   mov ax , [bx]
     sub ax , 10 
     mov [bx] ,ax               
     drawline 7,70,col1,row1,0Ah      ;ocount,incount,col,row,color  ->this draw left stick
     drawline 7,70,col2,row2,0Ah 
     ret
     MoveUP1 endp     

MoveDOWN2 proc 
     drawline 7,70,col1,row1,00h      ;ocount,incount,col,row,color  ->this draw left stick
     drawline 7,70,col2,row2,00h
     mov bx , offset row2   
     mov ax , [bx]
     add ax , 10 
     mov [bx] ,ax        
     drawline 7,70,col1,row1,0Ah      ;ocount,incount,col,row,color  ->this draw left stick
     drawline 7,70,col2,row2,0Ah 
     ret   
  MoveDOWN2  endp 
         
 MoveDOWN1 proc        
          drawline 7,70,col1,row1,00h      ;ocount,incount,col,row,color  ->this draw left stick
     drawline 7,70,col2,row2,00h
     mov bx , offset row1
    mov ax , [bx]
     add ax , 10 
     mov [bx] ,ax                
     drawline 7,70,col1,row1,0Ah      ;ocount,incount,col,row,color  ->this draw left stick
     drawline 7,70,col2,row2,0Ah  
     ret
  MoveDOWN1  endp 

 MoveUP2 proc 
     drawline 7,70,col1,row1,00h      ;ocount,incount,col,row,color  ->this draw left stick
     drawline 7,70,col2,row2,00h
     mov bx , offset row2
     mov ax , [bx]
     sub ax , 10  
    mov [bx] ,ax             
     drawline 7,70,col1,row1,0Ah      ;ocount,incount,col,row,color  ->this draw left stick
     drawline 7,70,col2,row2,0Ah 
     ret    
  MoveUP2  endp 


     
;Dina --->end
   
 main proc far
     mov ax,@data
     mov ds,ax
      
     firstwindow 
     ;clearscreen
     ;mainscreen 
     ;inpmainscreen
     myloopl: mov ah,1  ;to continue until press right key
             int 16h   
             jz myloopl     
             mov ah,0
             int 16H
             cmp ah,2eh ;F2 2Eh
             jz clear
             cmp al,1BH  ;ESC
             jz escape
			 jmp myloopl 
     ;drawinterface 
        
     clear:clearscreen     
     mov ah,0     ;change to graphic mode
     mov al,13h
     int 10h 
     ;call alldraw
     drawline 7,70,50,50,0Ah      ;ocount,incount,col,row,color  ->this draw left stick
   drawline 7,70,260,50,0Ah     ;                              ->this draw right stick
   drawline 7,200,0,0,80         ;                              ->this draw left frame
   drawline 7,200,313,0,80       ;                              ->this draw right frame                  
   drawcir 100,200,10,15  ;cenx,ceny,raduis,colour                       
          
;Dina --->start

CHECK: mov ah,1
int 16h          
jz CHECK  

 
MY_LOOP: 
mov ah,0
int 16h  

cmp ah,72
jz MoveUp 
cmp al,65h
jz MoveUp22
cmp ah,80
jz MoveDown
cmp al,64h
jz MoveDown22    
jmp CHECK


 MoveUp: 
cmp row1 , 00 
je CHECK 
call MoveUP1     
jmp CHECK

MoveUp22: 
cmp row2 , 00 
je CHECK 
call MoveUP2
jmp CHECK
MoveDown:
cmp row1 , 130 
je CHECK 
call MoveDOWN1   
jmp CHECK 

MoveDown22:
cmp row2 , 130 
je CHECK  
call MoveDOWN2 
jmp CHECK  

;---->end dina
 escape:mov ax, 4c00h
	      int 21h
     main endp  
          end main
     
     